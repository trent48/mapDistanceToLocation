<!DOCTYPE html>
<html>
    <head>
        <title>Distance Matrix service</title>
        <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
        <style>
            html, body {
                height: 100%;
                margin: 0;
                padding: 0;
            }
        
        #map-canvas {
            height: 50%;
            width: 50%;
        }
        #content-pane {
            float:right;
            width:48%;
            padding-left: 1%;
            margin: 0;
        }
        #outputDiv {
            font-size: 16px;
        }
        </style>
        <script>
            var map;
            var geocoder;
            var bounds = new google.maps.LatLngBounds();
            var markersArray = [];
            

            var origin1;
 
            var destinationA = 'pialligo ave, canberra, ACT, Austraila';
            var destinationB = '32 mort st, braddon, ACT,Austraila';

            var destinationIcon = 'https://chart.googleapis.com/chart?chst=d_map_pin_letter&chld=D|FF0000|000000';
            var originIcon = 'https://chart.googleapis.com/chart?chst=d_map_pin_letter&chld=O|FFFF00|000000';
            
            function initialize() {
                var opts = {
                    center: new google.maps.LatLng(-25.6415, 134.121),
                    zoom: 4
                };
                map = new google.maps.Map(document.getElementById('map-canvas'), opts);
                geocoder = new google.maps.Geocoder();
            }
        
        function calculateDistances() {
            var service = new google.maps.DistanceMatrixService();
            origin1 = document.getElementById("origin1").value;
            service.getDistanceMatrix(
                                      {
                                      origins: [origin1],
                                      destinations: [destinationA, destinationB],
                                      travelMode: google.maps.TravelMode.DRIVING,
                                      unitSystem: google.maps.UnitSystem.METRIC,
                                      avoidHighways: false,
                                      avoidTolls: false
                                      }, callback);
        }
        
        function callback(response, status) {
            if (status != google.maps.DistanceMatrixStatus.OK) {
                alert('Error was: ' + status);
            } else {
                var origins = response.originAddresses;
                var destinations = response.destinationAddresses;
                var outputDiv = document.getElementById('outputDiv');
                outputDiv.innerHTML = '';
                deleteOverlays();
                
                for (var i = 0; i < origins.length; i++) {
                    var results = response.rows[i].elements;
                    addMarker(origins[i], false);
                    outputDiv.innerHTML += 'location: ' + origins[i] + '<br><br>';
                    for (var j = 0; j < results.length; j++) {
                        addMarker(destinations[j], true);
                        outputDiv.innerHTML += 'destination' + ': ' + destinations[j]
                        + '<br> ' + results[j].distance.text + '       '
                        + '<br>' + results[j].duration.text + '<br><br>';
                    }
                }
            }
        }
        
        function addMarker(location, isDestination) {
            var icon;
            if (isDestination) {
                icon = destinationIcon;
            } else {
                icon = originIcon;
            }
            geocoder.geocode({'address': location}, function(results, status) {
                             if (status == google.maps.GeocoderStatus.OK) {
                             bounds.extend(results[0].geometry.location);
                             map.fitBounds(bounds);
                             var marker = new google.maps.Marker({
                                                                 map: map,
                                                                 position: results[0].geometry.location,
                                                                 icon: icon
                                                                 });
                             markersArray.push(marker);
                             } else {
                             alert('Geocode was not successful for the following reason: '
                                   + status);
                             }
                             });
        }
        
        function deleteOverlays() {
            for (var i = 0; i < markersArray.length; i++) {
                markersArray[i].setMap(null);
            }
            markersArray = [];
        }
        
        google.maps.event.addDomListener(window, 'load', initialize);
        
            </script>
    </head>
    <body>
        <div id="content-pane">
            <div id="inputs">
                <pre>entre location of the customer and click search for hertz location results.
                </pre>
                <p><input type="text" maxlength="" id=origin1 cols=30 rows=1></input><p>
                <p><button type="button" onclick="calculateDistances();">Calculate
                    distances</button></p>
            </div>
            <div id="outputDiv"></div>
        </div>
        <div id="map-canvas"></div>
    </body>
</html>
